@model WebApplication2.Models.QuestionViewModel
@{
ViewBag.Title = "Students - Home Page";
}

<section style="background-image: url('../../Images/MezoImages/bluebacksmall.png');background-repeat:repeat ">>
   @using (Ajax.BeginForm("Index", "Student", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "notifyTutors" }, new {  id = "mypost", enctype = "multipart/form-data" }))
   {
             @Html.AntiForgeryToken()

            <div class="container">
            <div class="QuestionBox col-lg-8 col-lg-offset-2">
                

                <h3>Ask a Question and Get Tutors Help</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @*<div class="form-group">
                        @Html.LabelFor(model => model.TutorID, "TutorID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TutorID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TutorID, "", new { @class = "text-danger" })
                        </div>
                    </div>*@


                <div class="form-group">
                    @Html.TextBoxFor(model => model.Title, new { placeholder = "Question Title", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CategoryID, "Category", htmlAttributes: new { @class = "control-label col-md-2", @style = " text-align: left;" })
                    <div class="input-group">
                        @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.TextAreaFor(model => model.Details, new { id = "QuestionText" })
                    @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="file" multiple  id="FileUpload"/>
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })

                </div>

                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.DueDate, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class='date' id='datetimepicker1'>
                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @*@Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })*@

                </div>

                <div class="form-group col-md-6">
                    @Html.Label(" ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <button type="submit" class="btn btn-success form-control">Post this Question</button>
                </div>

            </div>

        </div>

    }
</section>

@section scripts {

  <script src="~/ckeditor/ckeditor.js"></script>
    

    <script type="text/javascript">
                $(document).ready(function () {
                    CKEDITOR.config.extraPlugins = "base64image";
                    CKEDITOR.config.removePlugins = "image";
                    CKEDITOR.replace('QuestionText');
                    
                });
    </script>
    


<!--Script references. -->
<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>
<script>

    function notifyTutors(data) {

        var result = data.result;
        var splitData = result.split("$");
        var formData = new FormData();
        var totalFiles = document.getElementById("FileUpload").files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = document.getElementById("FileUpload").files[i];

            formData.append("FileUpload", file);
        }
        if (totalFiles > 0) {
            formData.append("QuestionId", splitData[0]);
            $.ajax({
                type: "POST",
                url: '/Students/UploadQuestionFile',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (response) {
                    //alert("success");
                    
                },
                error: function (error) {
                    alert("errror uploading files");
                }
            });
        }
        var notify = $.connection.notifyTutors;
         
        // Start the connection. And send messages to server
        $.connection.hub.start().done(function () {

            // Call the Send method on the hub.
            notify.server.send(result);           
            window.location = '/Students/Inbox';
        });
        
    }
   
</script>

}
